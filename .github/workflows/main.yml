name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - beta
      - release
      - 'release-*'
      - 'lts-*'
    tags:
      - '*'

jobs:
  lint:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Yarn install
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Check for TypeScript problems
        run: yarn problems

  node-tests:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Yarn install
        run: yarn install --frozen-lockfile
      - name: Run Tests
        run: yarn test:node

  browser-tests:
    strategy:
      fail-fast: false
      matrix:
        command: [development, production, fastboot]
        launcher: [Chrome, IE, Firefox, Safari]
        os: [macos-latest, windows-latest, ubuntu-latest]
        exclude:
          - os: macos-latest
            launcher: IE
          - os: windows-latest
            launcher: Safari
          - os: ubuntu-latest
            launcher: IE
          - os: ubuntu-latest
            launcher: Safari
    runs-on: ${{ matrix.os }}
    name: (${{matrix.command}}) ${{matrix.launcher}} on ${{matrix.os}}
    steps:
      - if: matrix.launcher == 'Safari'
        run: |
          defaults write com.apple.Safari IncludeDevelopMenu YES
          defaults write com.apple.Safari AllowRemoteAutomation 1
          sudo safaridriver --enable
          safaridriver -p 0 &
      - if: matrix.os == 'macos-latest' && matrix.launcher == 'Chrome'
        run: |
          brew update
          brew cask install google-chrome
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Launcher Info
        run: |
          yarn run testem launchers
      - name: Run Test
        timeout-minutes: 7
        env:
          TESTEM_CI_LAUNCHER: ${{ matrix.launcher }}
        run: yarn test:${{ matrix.command }}
